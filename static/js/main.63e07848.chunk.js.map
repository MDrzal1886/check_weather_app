{"version":3,"sources":["reportWebVitals.js","AppContext.js","components/ErrorDescription.js","img/error.svg","components/ErrorPanel.js","components/Form.js","components/OtherParameters.js","video/cloudsDay.mp4","video/cloudsNight.mp4","video/clearSky.mp4","video/clearSkyNight.mp4","video/mist.mp4","video/mistNight.mp4","video/rain.mp4","video/rainNight.mp4","video/snow.mp4","video/snowNight.mp4","video/thunderstorm.mp4","components/WeatherPanel.js","img/backgroundDay.jpg","img/backgroundNight.jpg","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppContext","createContext","AppProvider","children","useState","city","setCity","error","setError","errorCode","setErrorCode","code","description","humidity","pressure","sunRise","sunSet","temperature","temperatureFeels","timezone","windSpeed","weather","setWeather","dayOrNightStyles","setDayOrNightStyles","useEffect","APIurl","process","length","fetch","response","ok","json","status","data","Boolean","icon","main","sys","sunrise","sunset","temp","feels_like","wind","speed","catch","Provider","value","handleCloseClick","ErrorDescription","message","className","ErrorPanel","useContext","errorDescription","getErrorDescription","errorPanelDayOrNightClass","src","errorImage","alt","onClick","Form","inputValue","setInputValue","showInputHint","setShowInputHint","hintElement","inputDayOrNightClass","formContainerDayOrNightClass","formDayOrNightClass","buttonDayOrNightClass","onSubmit","event","preventDefault","type","onChange","target","toUpperCase","onFocus","placeholder","OtherParameters","getTimeToShow","timeSunRise","timeSunSet","weatherPanelElementDayOrNightClass","toFixed","WeatherPanel","videoSrc","thunderstorm","cloudsDay","cloudsNight","rain","rainNight","snow","snowNight","mist","mistNight","clearSky","clearSkyNight","getVideo","date","minutes","Math","floor","hours","timeToShow","Date","getTime","weatherContainerDayOrNightClass","weatherPanelStrongDayOrNightClass","autoPlay","loop","muted","playsInline","App","weatherPanelComponent","errorPanelComponent","FormComponent","houers","getHours","styleObject","backgroundImage","backgroundDay","backgroundNight","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63e07848.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst KeyAPPID = process.env.REACT_APP_API_KEY;\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [errorCode, setErrorCode] = useState(0);\r\n  const [weather, setWeather] = useState({\r\n    code: \"\",\r\n    description: \"\",\r\n    humidity: 0,\r\n    pressure: 0,\r\n    sunRise: 0,\r\n    sunSet: 0,\r\n    temperature: 0,\r\n    temperatureFeels: 0,\r\n    timezone: 0,\r\n    windSpeed: 0,\r\n  });\r\n  const [dayOrNightStyles, setDayOrNightStyles] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const APIurl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${KeyAPPID}&lang=pl`;\r\n    if (city.length > 0) {\r\n      fetch(APIurl)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            setErrorCode(response.status);\r\n            return;\r\n          }\r\n        })\r\n        .then((data) => {\r\n          if (Boolean(data)) {\r\n            return setWeather({\r\n              code: data.weather[0].icon,\r\n              description: data.weather[0].description,\r\n              humidity: data.main.humidity,\r\n              pressure: data.main.pressure,\r\n              sunRise: data.sys.sunrise,\r\n              sunSet: data.sys.sunset,\r\n              temperature: data.main.temp,\r\n              temperatureFeels: data.main.feels_like,\r\n              timezone: data.timezone,\r\n              windSpeed: data.wind.speed,\r\n            });\r\n          } else return setError(true);\r\n        })\r\n        .catch(() => {\r\n          return setError(true);\r\n        });\r\n    }\r\n  }, [city]);\r\n\r\n  const handleCloseClick = () => {\r\n    setWeather({\r\n      code: \"\",\r\n      description: \"\",\r\n      humidity: 0,\r\n      pressure: 0,\r\n      sunRise: 0,\r\n      sunSet: 0,\r\n      temperature: 0,\r\n      temperatureFeels: 0,\r\n      timezone: 0,\r\n      windSpeed: 0,\r\n    });\r\n    setError(false);\r\n    setCity(\"\");\r\n    setErrorCode(0);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        city,\r\n        error,\r\n        errorCode,\r\n        handleCloseClick,\r\n        setCity,\r\n        weather,\r\n        dayOrNightStyles,\r\n        setDayOrNightStyles,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import \"../sass/errorDescription.scss\";\r\n\r\nconst ErrorDescription = ({ message, code }) => {\r\n  return (\r\n    <div className=\"errorDescriptionContainer\">\r\n      <span>{code}</span>\r\n      <p> {message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorDescription;\r\n","export default __webpack_public_path__ + \"static/media/error.52091a3e.svg\";","import { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nimport ErrorDescription from \"./ErrorDescription\";\r\n\r\nimport \"../sass/errorPanel.scss\";\r\n\r\nimport errorImage from \"../img/error.svg\";\r\n\r\nconst ErrorPanel = () => {\r\n  const { errorCode, dayOrNightStyles, handleCloseClick } =\r\n    useContext(AppContext);\r\n\r\n  const getErrorDescription = () => {\r\n    switch (errorCode) {\r\n      case 401:\r\n        return (\r\n          <ErrorDescription message=\"Klucz jest nie aktywny\" code={errorCode} />\r\n        );\r\n      case 404:\r\n        return (\r\n          <ErrorDescription\r\n            message=\"Coś źle wpisane! Nie znajduję takiego miejsca :(\"\r\n            code={errorCode}\r\n          />\r\n        );\r\n      case 429:\r\n        return (\r\n          <ErrorDescription\r\n            message=\"Limit przekroczony! Spróbuj ponownie później\"\r\n            code={errorCode}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ErrorDescription\r\n            message=\"Coś nie tak u mnie :( Przepraszam :(\"\r\n            code={errorCode}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const errorDescription = getErrorDescription();\r\n\r\n  const errorPanelDayOrNightClass = dayOrNightStyles\r\n    ? \"errorPanelContainer\"\r\n    : \"errorPanelContainer errorPanelContainer--night\";\r\n\r\n  return (\r\n    <div className={errorPanelDayOrNightClass}>\r\n      <img src={errorImage} alt=\"Błąd\" />\r\n      {errorDescription}\r\n      <button onClick={handleCloseClick} className=\"exitButton\">\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPanel;\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nimport \"../sass/form.scss\";\r\n\r\nconst Form = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [showInputHint, setShowInputHint] = useState(false);\r\n  const { setCity, dayOrNightStyles } = useContext(AppContext);\r\n\r\n  const handleInputValue = (event) =>\r\n    setInputValue(event.target.value.toUpperCase());\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    const city = inputValue;\r\n    setCity(city);\r\n    setInputValue(\"\");\r\n    setShowInputHint(false);\r\n  };\r\n\r\n  const handleOnFocus = () => {\r\n    setShowInputHint(true);\r\n  };\r\n\r\n  const hint =\r\n    \"*Więcej miejsc o tej nazwie? Wpisz po przecinku symbol państwa (np. DUBLIN,IE)\";\r\n\r\n  const hintElement = showInputHint ? (\r\n    <p className=\"formContainer__form__hint\">{hint}</p>\r\n  ) : null;\r\n\r\n  const inputDayOrNightClass = dayOrNightStyles\r\n    ? \"formContainer__form__input\"\r\n    : \"formContainer__form__input formContainer__form__input--night\";\r\n\r\n  const formContainerDayOrNightClass = dayOrNightStyles\r\n    ? \"formContainer\"\r\n    : \"formContainer formContainer--night\";\r\n\r\n  const formDayOrNightClass = dayOrNightStyles\r\n    ? \"formContainer__form\"\r\n    : \"formContainer__form formContainer__form--night\";\r\n\r\n  const buttonDayOrNightClass = dayOrNightStyles\r\n    ? \"formContainer__form__button\"\r\n    : \"formContainer__form__button formContainer__form__button--night\";\r\n\r\n  return (\r\n    <div className={formContainerDayOrNightClass}>\r\n      <form onSubmit={handleOnSubmit} className={formDayOrNightClass}>\r\n        {hintElement}\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputValue}\r\n          onFocus={handleOnFocus}\r\n          placeholder=\"Wpisz miejsce...\"\r\n          className={inputDayOrNightClass}\r\n        />\r\n        <button type=\"submit\" className={buttonDayOrNightClass}>\r\n          sprawdź\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useContext } from \"react\";\r\n\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nconst OtherParameters = ({ getTimeToShow }) => {\r\n  const { dayOrNightStyles, weather } = useContext(AppContext);\r\n\r\n  const {\r\n    humidity,\r\n    pressure,\r\n    sunRise,\r\n    sunSet,\r\n    temperatureFeels,\r\n    timezone,\r\n    windSpeed,\r\n  } = weather;\r\n\r\n  const timeSunRise = getTimeToShow((sunRise + timezone) * 1000);\r\n  const timeSunSet = getTimeToShow((sunSet + timezone) * 1000);\r\n\r\n  const weatherPanelElementDayOrNightClass = dayOrNightStyles\r\n    ? \"otherParametersContainer__element\"\r\n    : \"otherParametersContainer__element otherParametersContainer__element--night\";\r\n\r\n  return (\r\n    <div className=\"otherParametersContainer\">\r\n      <div className={weatherPanelElementDayOrNightClass}>\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Wschód słońca\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {timeSunRise}\r\n          </span>\r\n        </p>\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Zachód słońca\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {timeSunSet}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className={weatherPanelElementDayOrNightClass}>\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Prędkość wiatru\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {windSpeed}km/h\r\n          </span>\r\n        </p>\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Odczuwalna\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {temperatureFeels.toFixed()}&deg;C\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"otherParametersContainer__element\">\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Wilgotność\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {humidity}%\r\n          </span>\r\n        </p>\r\n        <p className=\"otherParametersContainer__element__description\">\r\n          Ciśnienie\r\n          <span className=\"otherParametersContainer__element__description__value\">\r\n            {pressure}hPa\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherParameters;\r\n","export default __webpack_public_path__ + \"static/media/cloudsDay.bff703eb.mp4\";","export default __webpack_public_path__ + \"static/media/cloudsNight.d05fede6.mp4\";","export default __webpack_public_path__ + \"static/media/clearSky.03798eab.mp4\";","export default __webpack_public_path__ + \"static/media/clearSkyNight.f3fa4f0a.mp4\";","export default __webpack_public_path__ + \"static/media/mist.467e107b.mp4\";","export default __webpack_public_path__ + \"static/media/mistNight.4d03c8e6.mp4\";","export default __webpack_public_path__ + \"static/media/rain.ba986cdc.mp4\";","export default __webpack_public_path__ + \"static/media/rainNight.4b6c02a3.mp4\";","export default __webpack_public_path__ + \"static/media/snow.5685d1ba.mp4\";","export default __webpack_public_path__ + \"static/media/snowNight.046bda54.mp4\";","export default __webpack_public_path__ + \"static/media/thunderstorm.d894cde0.mp4\";","import { useContext } from \"react\";\r\n\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nimport OtherParameters from \"./OtherParameters\";\r\n\r\nimport \"../sass/weatherPanel.scss\";\r\n\r\nimport cloudsDay from \"../video/cloudsDay.mp4\";\r\nimport cloudsNight from \"../video/cloudsNight.mp4\";\r\nimport clearSky from \"../video/clearSky.mp4\";\r\nimport clearSkyNight from \"../video/clearSkyNight.mp4\";\r\nimport mist from \"../video/mist.mp4\";\r\nimport mistNight from \"../video/mistNight.mp4\";\r\nimport rain from \"../video/rain.mp4\";\r\nimport rainNight from \"../video/rainNight.mp4\";\r\nimport snow from \"../video/snow.mp4\";\r\nimport snowNight from \"../video/snowNight.mp4\";\r\nimport thunderstorm from \"../video/thunderstorm.mp4\";\r\n\r\nconst WeatherPanel = () => {\r\n  const { dayOrNightStyles, handleCloseClick, city, weather } =\r\n    useContext(AppContext);\r\n\r\n  const { code, description, temperature, timezone } = weather;\r\n\r\n  const getVideo = () => {\r\n    if (code) {\r\n      switch (code) {\r\n        case \"11d\":\r\n          return thunderstorm;\r\n        case \"11n\":\r\n          return thunderstorm;\r\n        case \"02d\":\r\n          return cloudsDay;\r\n        case \"03d\":\r\n          return cloudsDay;\r\n        case \"04d\":\r\n          return cloudsDay;\r\n        case \"02n\":\r\n          return cloudsNight;\r\n        case \"03n\":\r\n          return cloudsNight;\r\n        case \"04n\":\r\n          return cloudsNight;\r\n        case \"09d\":\r\n          return rain;\r\n        case \"10d\":\r\n          return rain;\r\n        case \"09n\":\r\n          return rainNight;\r\n        case \"10n\":\r\n          return rainNight;\r\n        case \"13d\":\r\n          return snow;\r\n        case \"13n\":\r\n          return snowNight;\r\n        case \"50d\":\r\n          return mist;\r\n        case \"50n\":\r\n          return mistNight;\r\n        case \"01d\":\r\n          return clearSky;\r\n        case \"01n\":\r\n          return clearSkyNight;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const videoSrc = getVideo();\r\n\r\n  const date = new Date().getTime() + timezone * 1000;\r\n\r\n  const getTimeToShow = (date) => {\r\n    const minutes = Math.floor((date / (1000 * 60)) % 60);\r\n    const hours = Math.floor((date / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours < 10 ? `0${hours}` : hours}:${\r\n      minutes < 10 ? `0${minutes}` : minutes\r\n    }`;\r\n  };\r\n\r\n  const timeToShow = getTimeToShow(date);\r\n\r\n  const weatherContainerDayOrNightClass = dayOrNightStyles\r\n    ? \"weatherPanelContainer\"\r\n    : \"weatherPanelContainer weatherPanelContainer--night\";\r\n\r\n  const weatherPanelStrongDayOrNightClass = dayOrNightStyles\r\n    ? \"weatherPanelContainer__panel__strong\"\r\n    : \"weatherPanelContainer__panel__strong weatherPanelContainer__panel__strong--night\";\r\n\r\n  return (\r\n    <div className={weatherContainerDayOrNightClass}>\r\n      <video\r\n        autoPlay\r\n        loop\r\n        muted\r\n        playsInline\r\n        src={videoSrc}\r\n        type=\"video/mp4\"\r\n        className=\"weatherPanelContainer__video\"\r\n      ></video>\r\n      <div className=\"weatherPanelContainer__panel\">\r\n        <h1>{city.toUpperCase()}</h1>\r\n        <p className=\"weatherPanelContainer__panel__timeAndDescription\">\r\n          {timeToShow}\r\n        </p>\r\n        <p className=\"weatherPanelContainer__panel__timeAndDescription\">\r\n          {description}\r\n        </p>\r\n        <strong className={weatherPanelStrongDayOrNightClass}>\r\n          {temperature.toFixed()}&deg;C\r\n        </strong>\r\n        <OtherParameters getTimeToShow={getTimeToShow} />\r\n        <button onClick={handleCloseClick} className=\"exitButton\">\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherPanel;\r\n","export default __webpack_public_path__ + \"static/media/backgroundDay.a703c347.jpg\";","export default __webpack_public_path__ + \"static/media/backgroundNight.1c335e68.jpg\";","import { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"./AppContext\";\r\nimport ErrorPanel from \"./components/ErrorPanel\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport WeatherPanel from \"./components/WeatherPanel\";\r\n\r\nimport backgroundDay from \"./img/backgroundDay.jpg\";\r\nimport backgroundNight from \"./img/backgroundNight.jpg\";\r\n\r\nimport \"./sass/app.scss\";\r\n\r\nfunction App() {\r\n  const { city, error, setDayOrNightStyles, dayOrNightStyles, weather } =\r\n    useContext(AppContext);\r\n  const weatherPanelComponent =\r\n    Boolean(city) && !error && Boolean(weather.code) ? <WeatherPanel /> : null;\r\n  const errorPanelComponent = error ? <ErrorPanel /> : null;\r\n  const FormComponent = !Boolean(city) ? <Form /> : null;\r\n  const houers = new Date().getHours();\r\n\r\n  useEffect(() => {\r\n    if (houers >= 19 || houers <= 5) {\r\n      if (dayOrNightStyles) {\r\n        setDayOrNightStyles(false);\r\n      }\r\n    } else if (houers <= 19 || houers >= 5) {\r\n      if (!dayOrNightStyles) {\r\n        setDayOrNightStyles(true);\r\n      }\r\n    }\r\n  }, [setDayOrNightStyles, dayOrNightStyles, houers]);\r\n\r\n  const styleObject = {\r\n    backgroundImage: `url(${\r\n      dayOrNightStyles ? backgroundDay : backgroundNight\r\n    })`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\" style={styleObject}>\r\n      {FormComponent}\r\n      {weatherPanelComponent}\r\n      {errorPanelComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport AppProvider from \"./AppContext\";\r\nimport App from \"./App\";\r\n\r\nimport \"./sass/index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}